#!/sbin/busybox sh

XML=$CONFIG_XML

echo "" > $XML

echo '
<settingsRoot>' >> $XML

echo '
  <settingsTab name="CPU">
    <settingsPane description="Apply the settings on boot only if the desired settings prove to be stable, else the device ends up in a boot-loop. If turned off, the displayed values do not correspond the current live values but the saved profile values, some inconsistencies may occur on applying." 
                  name="CPU control switch">
      <checkbox description="If enabled, the below settings will be applied at boot." 
                name="Set CPU settings on boot" 
                action="controlswitch CPU"
                label="Set on boot"/>
    </settingsPane>
      <settingsPane description="" 
                  name="CPU governor and frequencies">

		<button description="Use this button to see what CPU governor and frequencies are being used right now!" name="Check Active CPU Control" action="check_voltages check_gov_freq" label="Check CPU Control"/>' >> $XML
echo "
      <spinner description=\"Set active governor. Default: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`\" 
               name=\"Current governor\" 
               action=\"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\">" >> $XML

for GOVERNOR in `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors`; do
  echo "
        <spinnerItem name=\"$GOVERNOR\" value=\"$GOVERNOR\"/>" >> $XML
done

echo "
  </spinner>
      <spinner description=\"Set the maximum freqency the CPU scales up to. Default: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq | rev | cut -c 4- | rev` MHz.\" 
               name=\"CPU max frequency\" 
               action=\"cpugeneric /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq\">" >> $XML

while read FREQ UVOLT; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done < /sys/devices/system/cpu/cpu0/cpufreq/UV_uV_table


echo "
      </spinner>
      <spinner description=\"Set the minimum freqency the CPU scales down to. Default: `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq | rev | cut -c 4- | rev` MHz.\" 
               name=\"CPU min frequency\" 
               action=\"cpugeneric /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq\">" >> $XML

while read FREQ UVOLT; do
  echo "
        <spinnerItem name=\"$FREQ MHz\" value=\"${FREQ}000\"/>" >> $XML
done < /sys/devices/system/cpu/cpu0/cpufreq/UV_uV_table

echo '
      </spinner>
    </settingsPane>
	<settingsPane description="These settings control CFS (Complete Fair Scheduler) Task Scheduler Settings" name="CFS Settings">
      <checkbox description="Disabling GENTLE_FAIR_SLEEPERS may give you better UI responsiveness." name="GENTLE_FAIR_SLEEPERS" action="schedfeat GENTLE_FAIR_SLEEPERS" label="GENTLE_FAIR_SLEEPERS"/>
    </settingsPane>
	<settingsPane description="" 
		name="CPU Idle and Power Settings">
      <spinner description="Sets the CPU Idle Mode. Idle+LPA is the default and recommended for S3." name="CPU Idle Mode" action="generic /sys/module/cpuidle_exynos4/parameters/enable_mask">
             <spinnerItem name="Idle + LPA (default)" value="2"/> 
             <spinnerItem name="AFTR + LPA" value="3"/> 
             <spinnerItem name="AFTR only" value="1"/> 
             <spinnerItem name="Idle only" value="0"/> 
      </spinner>
      <seekBar description="Sets the sched_mc value which changes the cpu scheduler behaviour for multi-cpu systems. 0 is kernel default value which turns sched_mc off. Setting it to 1 means that the first core will be tried to be loaded more and setting it to 2 will bias task wake-ups to semi-idle cpu package for power savings. Default: 0"
            name="sched_mc" action="generic /sys/devices/system/cpu/sched_mc_power_savings" unit="" min="0" reversed="false" step="1" max="2"/>
    </settingsPane>' >> $XML

echo '
    <settingsPane description="Decreasing voltage will lower power consumption of the CPU. Increasing it on overclocked frequencies improves stability. Too low voltage may cause instabilities and freezes." 
                  name="CPU voltage control">

	<button description="Use this button to see what CPU Voltage is used right now!" name="Check Active CPU Voltage" action="check_voltages cpu" label="Check CPU Voltage"/>' >> $XML

while read FREQ UVOLT; do
  echo "
      <seekBar  description=\"Default voltage: $UVOLTµV\" 
	        name=\"${FREQ} MHz step\" 
                action=\"cpuvolt ${FREQ}\"
                unit=\" µV\" min=\"600000\" reversed=\"false\" step=\"12500\" max=\"1400000\"/>" >> $XML
  CPUFREQLIST="$CPUFREQLIST $FREQ"
done < /sys/devices/system/cpu/cpu0/cpufreq/UV_uV_table



echo '
    </settingsPane>
  </settingsTab>

  <settingsTab name="Memory/Internal">
    <settingsPane description="Apply the settings on boot only if the desired settings prove to be stable, else the device ends up in a boot-loop. If turned off, the displayed values do not correspond the current live values but the saved profile values, some inconsistencies may occur on applying." 
                  name="MIF/INT voltage control switch">
      <checkbox description="If enabled, the below settings will be applied at boot." 
                name="Set bus voltages on boot" 
                action="controlswitch BUS" 
                label="Set on boot"/>
    </settingsPane>

    <settingsPane description="MIF/INT represent the SoCs memory interface and internal components. The DVFS logic controls both frequencies in pairwise steps, although the frequencies are independant, they are defined together in pairwise steps. MIF or Memory Interface is the direct voltage and frequency used on the C2C bus to the memory chip. INT or internal voltage and frequency are the internal bus and all components connected to it other than the CPU and GPU cores. This encompasses blocks like the camera interfaces, the ISP, the I/O controllers and the MFC (Hardware decoder). The configurables below control the scaling parameters of the DVFS logic of this block. The next target frequency is decided by the maximum of (Target DMC frequency ; Target CPU frequency ; Busfreq lock frequency)."
                  name="Mif/Int control">' >> $XML

echo "
      <seekBar description=\"The sampling rate period on which the DVFS monitor makes decision. Default: `cat /sys/devices/system/cpu/busfreq/sampling_rate`µS.\"
               name=\"sampling_rate\" 
               action=\"generictag BUS /sys/devices/system/cpu/busfreq/sampling_rate\"
               unit=\"µS\" min=\"10000\" reversed=\"false\" step=\"5000\" max=\"200000\"/>

      <seekBar description=\"The Platform Performance Monitoring Unit (PPMU) collects usage information on the bus on a hardware level from the CPU and the two memory controllers (DMCs). This dictates the size of the historic the kernel keeps in store. Default: `cat /sys/devices/system/cpu/busfreq/load_history_size`.\"
               name=\"Load history size\" 
               action=\"generictag BUS /sys/devices/system/cpu/busfreq/load_history_size\"
               unit=\"samples\" min=\"1\" reversed=\"false\" step=\"1\" max=\"5\"/>

      <seekBar description=\"The DMC maximum threshold above which the average load of the memory controllers over the last sample is exceeded, the maximum OPP step is set. Default: `cat /sys/devices/system/cpu/busfreq/dmc_max_threshold`.\"
               name=\"DMC maximum threshold\" 
               action=\"generictag BUS /sys/devices/system/cpu/busfreq/dmc_max_threshold\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"99\"/>

      <seekBar description=\"The idle threshold, which, if the memory controller load falls below it, reduces the OPP step by one step. If the live load falls between the idle threshold and DMC max threshold, the average DMC load over the load history size is taken and normalized towards the maximum OPP frequency, and this ondemand-like target frequency dictates the next DMC frequency. Default: `cat /sys/devices/system/cpu/busfreq/idle_threshold`.\"
               name=\"Idle threshold\" 
               action=\"generictag BUS /sys/devices/system/cpu/busfreq/idle_threshold\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"50\"/>

      <seekBar description=\"The CPU maximum bus threshold above which the load of the CPU bus over the last sample is exceeded, the maximum OPP step is set. Default: `cat /sys/devices/system/cpu/busfreq/max_cpu_threshold`.\"
               name=\"Maximum CPU bus threshold\" 
               action=\"generictag BUS /sys/devices/system/cpu/busfreq/max_cpu_threshold\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"99\"/>

      <seekBar description=\"The CPU bus up threshold, actually acting as a delimiter threshold of sorts, if the load exceeds up_threshold but doesn't exceed max CPU threshold, it takes into account the CPU load slope size to step down one step, if the slope conditional isn't met, the CPU target bus frequency stays the same. Default: `cat /sys/devices/system/cpu/busfreq/up_cpu_threshold`.\"
               name=\"Up CPU threshold\" 
               action=\"generictag BUS /sys/devices/system/cpu/busfreq/up_cpu_threshold\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"99\"/>

      <seekBar description=\"CPU slope size is defined by the load difference from the current sample to the previous sample. If the slope exceeds the set value, the CPU target bus frequency steps down one step. Default: `cat /sys/devices/system/cpu/busfreq/cpu_slope_size`.\"
               name=\"CPU slope size\" 
               action=\"generictag BUS /sys/devices/system/cpu/busfreq/cpu_slope_size\"
               unit=\"%\" min=\"1\" reversed=\"false\" step=\"1\" max=\"50\"/>

" >> $XML

echo  '
    </settingsPane>
    <settingsPane description=""
                  name="Internal voltage">

		<button description="Use this button to see what Internal Voltages is used right now!" name="Check Active Internal Voltage" action="check_voltages int" label="Check Internal Voltages"/>'>> $XML

while read FREQ VOLT; do
  S_FREQ=`echo $FREQ | cut -c 4-`
  evalcmd='eval echo \$INT_$S_FREQ'
  if [ "a`eval $evalcmd`" == "a" ]; then
    eval "INT_$S_FREQ=$VOLT"
    echo "<seekBar  description=\"Default voltage: $VOLTµV\" 
	          name=\"${S_FREQ} MHz step\" 
                  action=\"intvolt ${S_FREQ}\"
                  unit=\"µV\" min=\"600000\" reversed=\"false\" step=\"12500\" max=\"1150000\"/>" >> $XML
  fi
done < /sys/devices/system/cpu/busfreq/int_volt_table

echo  '
    </settingsPane>
    <settingsPane description=""
                  name="Memory voltage">

		<button description="Use this button to see what Memory Voltages is used right now!" name="Check Active Memory Voltage" action="check_voltages mif" label="Check Memory Voltages"/>'>> $XML

while read FREQ VOLT; do
  S_FREQ=`echo $FREQ | cut -c 1-3`
  evalcmd='eval echo \$MIF_$S_FREQ'
  if [ "a`eval $evalcmd`" == "a" ]; then
    eval "MIF_$S_FREQ=$VOLT"
    echo "<seekBar  description=\"Default voltage: $VOLTµV\" 
	          name=\"${S_FREQ} MHz step\" 
                  action=\"mifvolt ${S_FREQ}\"
                  unit=\"µV\" min=\"750000\" reversed=\"false\" step=\"50000\" max=\"1100000\"/>" >> $XML
  fi
done < /sys/devices/system/cpu/busfreq/mif_volt_table

echo '
    </settingsPane>
  </settingsTab>
' >> $XML


echo '
  <settingsTab name="GPU">

    <settingsPane description="' >> $XML
	cat /sys/class/misc/gpu_voltage_control/asv_level >> $XML
	echo '. Please note that kernel automatically recalculates voltage based on ASV level if you change a frequency in any of steps." 
                  name="GPU Control">
      <spinner description="Default: 160 MHz  Suggested: [53 MHz]--[200 MHz]" name="Step 0 Frequency" action="gpufreqgeneric /sys/class/misc/gpu_clock_control/gpu_freq_0">' >> $XML

	  for FREQ in `cat /sys/class/misc/gpu_clock_control/available_frequencies` ; do
	  echo "<spinnerItem name=\"$FREQ MHz\" value=\"$FREQ\"/>" >> $XML
	  done

      echo '</spinner>
	  <seekBar  description="Default: 19%. Defines needed threshold for changing to higher step" name="Step 0 Up Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_upthreshold_0" unit="%" min="0" reversed="false" step="1" max="100"/>
	  <seekBar  description="Default: 0. Staycount defines an additional delay before changing this step" name="Step 0 Staycount" action="generic /sys/class/misc/gpu_clock_control/gpu_staycount_0" unit="" min="0" reversed="false" step="1" max="255"/>
	  <spinner description="Default: 266 MHz  Suggested: [200 MHz]--[300 MHz]" name="Step 1 Frequency" action="gpufreqgeneric /sys/class/misc/gpu_clock_control/gpu_freq_1">' >> $XML

	  for FREQ in `cat /sys/class/misc/gpu_clock_control/available_frequencies` ; do
	  echo "<spinnerItem name=\"$FREQ MHz\" value=\"$FREQ\"/>" >> $XML
	  done

      echo '</spinner>
	  <seekBar  description="Default: 16%. Defines needed threshold for changing to lower step" name="Step 1 Down Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_downthreshold_1" unit="%" min="0" reversed="false" step="1" max="100"/>
	  <seekBar  description="Default: 19%. Defines needed threshold for changing to higher step" name="Step 1 Up Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_upthreshold_1" unit="%" min="0" reversed="false" step="1" max="100"/>
	  <seekBar  description="Default: 0. Staycount defines an additional delay before changing this step" name="Step 1 Staycount" action="generic /sys/class/misc/gpu_clock_control/gpu_staycount_1" unit="" min="0" reversed="false" step="1" max="255"/>
	  <spinner description="Default: 350 MHz  Suggested: [300 MHz]--[400 MHz]" name="Step 2 Frequency" action="gpufreqgeneric /sys/class/misc/gpu_clock_control/gpu_freq_2">' >> $XML

	  for FREQ in `cat /sys/class/misc/gpu_clock_control/available_frequencies` ; do
	  echo "<spinnerItem name=\"$FREQ MHz\" value=\"$FREQ\"/>" >> $XML
	  done

      echo '</spinner>
	  <seekBar  description="Default: 25%. Defines needed threshold for changing to lower step" name="Step 2 Down Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_downthreshold_2" unit="%" min="0" reversed="false" step="1" max="100"/>
	  <seekBar  description="Default: 27%. Defines needed threshold for changing to higher step" name="Step 2 Up Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_upthreshold_2" unit="%" min="0" reversed="false" step="1" max="100"/>
	  <seekBar  description="Default: 0. Staycount defines an additional delay before changing this step" name="Step 2 Staycount" action="generic /sys/class/misc/gpu_clock_control/gpu_staycount_2" unit="" min="0" reversed="false" step="1" max="255"/>
	  <spinner description="Default: 440 MHz  Suggested: [400 MHz]--[500 MHz]" name="Step 3 Frequency" action="gpufreqgeneric /sys/class/misc/gpu_clock_control/gpu_freq_3">' >> $XML

	  for FREQ in `cat /sys/class/misc/gpu_clock_control/available_frequencies` ; do
	  echo "<spinnerItem name=\"$FREQ MHz\" value=\"$FREQ\"/>" >> $XML
	  done

      echo '</spinner>
	  <seekBar  description="Default: 27%. Defines needed threshold for changing to lower step" name="Step 3 Down Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_downthreshold_3" unit="%" min="0" reversed="false" step="1" max="100"/>
	  <seekBar  description="Default: 31%. Defines needed threshold for changing to higher step" name="Step 3 Up Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_upthreshold_3" unit="%" min="0" reversed="false" step="1" max="100"/>
	  <seekBar  description="Default: 0. Staycount defines an additional delay before changing this step" name="Step 3 Staycount" action="generic /sys/class/misc/gpu_clock_control/gpu_staycount_3" unit="" min="0" reversed="false" step="1" max="255"/>
	  <spinner description="Default: 533 MHz  Suggested: [500 MHz]--[600 MHz]" name="Step 4 Frequency" action="gpufreqgeneric /sys/class/misc/gpu_clock_control/gpu_freq_4">' >> $XML

	  for FREQ in `cat /sys/class/misc/gpu_clock_control/available_frequencies` ; do
	  echo "<spinnerItem name=\"$FREQ MHz\" value=\"$FREQ\"/>" >> $XML
	  done

      echo '</spinner>
			<seekBar  description="Default: 31%. Defines needed threshold for changing to lower step" name="Step 4 Down Threshold" action="generic /sys/class/misc/gpu_clock_control/gpu_downthreshold_4" unit="%" min="0" reversed="false" step="1" max="100"/>
			<seekBar  description="Default: 0. Staycount defines an additional delay before changing this step" name="Step 4 Staycount" action="generic /sys/class/misc/gpu_clock_control/gpu_staycount_4" unit="" min="0" reversed="false" step="1" max="255"/>
    </settingsPane>
	<settingsPane description="WARNING! These values will get automatically recalculated and purged if you change any frequency above, because of that DO NOT FORGET to restart STweaks to reload these values if you in fact changed any frequency above." 
                  name="GPU Control">
      <checkbox description="If enabled, the below settings will be applied at boot. Please take care and make proper tests before enabling this switch." 
                name="Set GPU settings on boot" 
                action="controlswitch GPU" 
                label="Set on boot"/>
    </settingsPane>
	<settingsPane description="" 
                  name="GPU Voltage Control">

		<button description="Use this button to see what GPU Voltage is used right now!" name="Check Active GPU Voltage" action="check_voltages gpu" label="Check GPU Voltage"/>

      <seekBar  description="" name="Step 0 Voltage" action="gpugeneric /sys/class/misc/gpu_voltage_control/gpu_voltage_0" unit="µV" min="800000" reversed="false" step="2500" max="1300000"/>
	  <seekBar  description="" name="Step 1 Voltage" action="gpugeneric /sys/class/misc/gpu_voltage_control/gpu_voltage_1" unit="µV" min="800000" reversed="false" step="2500" max="1300000"/>
	  <seekBar  description="" name="Step 2 Voltage" action="gpugeneric /sys/class/misc/gpu_voltage_control/gpu_voltage_2" unit="µV" min="800000" reversed="false" step="2500" max="1300000"/>
	  <seekBar  description="" name="Step 3 Voltage" action="gpugeneric /sys/class/misc/gpu_voltage_control/gpu_voltage_3" unit="µV" min="800000" reversed="false" step="2500" max="1300000"/>
	  <seekBar  description="" name="Step 4 Voltage" action="gpugeneric /sys/class/misc/gpu_voltage_control/gpu_voltage_4" unit="µV" min="800000" reversed="false" step="2500" max="1300000"/>
    </settingsPane>' >> $XML
echo '
  </settingsTab>'  >> $XML


echo '
  <settingsTab name="ABB">
  <settingsPane description="ABB Info: ' >> $XML
  cat /sys/devices/system/abb/abb_info >> $XML
  echo "" >> $XML
echo ' Adaptive Body Bias is a secondary voltage applied onto the body of the transistor, where as the normal voltage is the gate voltage. Adjusting the body voltage in a differential to the gate voltage changes the characteristics of the transistor in how it switches. The body bias is the delta of the body voltage to the gate voltage, or difference between gate voltage minus body voltage. A positive body bias results in a Forward Body Bias (FBB) which lowers the transistor switching threshold and allows for higher clocks at the same voltage, or lower voltage at the same clocks. A negative body bias, or Reverse Body Bias (RBB) raises the switching threshold and can drastically improve leakage, but with the reverse effects of FBB in terms of voltage and clocks. WARNING: For advanced users only who understand the electrical physics behind it."  
                  name="Adaptive Body Bias">
    </settingsPane>' >> $XML

echo '
    <settingsPane description="ARM (CPU) body bias voltages."
                  name="CPU">
		<button description="Use this button to see what ARM(CPU) Slice Voltages are being used right now!" name="Check ARM Slice Voltages" action="check_voltages cpuslice" label="Check ARM Slice Voltages"/>' >> $XML

echo "
     <seekBar  description=\"Slice 1 frequencies: ..`cat /sys/devices/system/abb/arm/arm_slice_1_freq`].\"
               name=\"Slice 1 voltage\"
               action=\"generic /sys/devices/system/abb/arm/arm_slice_1_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

     <seekBar  description=\"Slice 2 frequencies: ..`cat /sys/devices/system/abb/arm/arm_slice_2_freq`].\"
               name=\"Slice 2 voltage\"
               action=\"generic /sys/devices/system/abb/arm/arm_slice_2_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

     <seekBar  description=\"Slice 3 frequencies: ..`cat /sys/devices/system/abb/arm/arm_slice_3_freq`].\"
               name=\"Slice 3 voltage\"
               action=\"generic /sys/devices/system/abb/arm/arm_slice_3_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

     <seekBar  description=\"Slice 4 frequencies: ]`cat /sys/devices/system/abb/arm/arm_slice_3_freq`.. .\"
               name=\"Slice 4 voltage\"
               action=\"generic /sys/devices/system/abb/arm/arm_slice_4_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

    </settingsPane>" >> $XML

echo '
    <settingsPane description="G3D (GPU) body bias voltages."
                  name="GPU">

		<button description="Use this button to see what GPU Slice Voltages are being used right now!" name="Check GPU Slice Voltages" action="check_voltages gpuslice" label="Check GPU Slice Voltages"/>' >> $XML

echo "
     <seekBar  description=\"Slice 1 frequencies: ..`cat /sys/devices/system/abb/g3d/g3d_slice_1_freq`].\"
               name=\"Slice 1 voltage\"
               action=\"generic /sys/devices/system/abb/g3d/g3d_slice_1_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

     <seekBar  description=\"Slice 2 frequencies: ..`cat /sys/devices/system/abb/g3d/g3d_slice_2_freq`].\"
               name=\"Slice 2 voltage\"
               action=\"generic /sys/devices/system/abb/g3d/g3d_slice_2_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

     <seekBar  description=\"Slice 3 frequencies: ]`cat /sys/devices/system/abb/g3d/g3d_slice_2_freq`.. .\"
               name=\"Slice 3 voltage\"
               action=\"generic /sys/devices/system/abb/g3d/g3d_slice_3_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

    </settingsPane>" >> $XML

echo '
    <settingsPane description="MIF (Memory interface) body bias voltages."
                  name="MIF">

		<button description="Use this button to see what MIF Slice Voltages are being used right now!" name="Check MIF Slice Voltages" action="check_voltages mifslice" label="Check MIF Slice Voltages"/>' >> $XML

echo "
     <seekBar  description=\"Slice 1 frequencies: ..`cat /sys/devices/system/abb/mif/mif_slice_1_freq`].\"
               name=\"Slice 1 voltage\"
               action=\"generic /sys/devices/system/abb/mif/mif_slice_1_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

     <seekBar  description=\"Slice 2 frequencies: ]`cat /sys/devices/system/abb/mif/mif_slice_1_freq`.. .\"
               name=\"Slice 2 voltage\"
               action=\"generic /sys/devices/system/abb/mif/mif_slice_2_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

    </settingsPane>" >> $XML

echo '
    <settingsPane description="INT (Internal SoC) body bias voltages."
                  name="INT">

		<button description="Use this button to see what Internal Slice Voltages are being used right now!" name="Check INT Slice Voltages" action="check_voltages intslice" label="Check INT Slice Voltages"/>' >> $XML

echo "
     <seekBar  description=\"Slice 1 frequencies: ..`cat /sys/devices/system/abb/int/int_slice_1_freq`].\"
               name=\"Slice 1 voltage\"
               action=\"generic /sys/devices/system/abb/int/int_slice_1_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

     <seekBar  description=\"Slice 2 frequencies: ]`cat /sys/devices/system/abb/int/int_slice_1_freq`.. .\"
               name=\"Slice 2 voltage\"
               action=\"generic /sys/devices/system/abb/int/int_slice_2_volt\" 
               unit=\"mV\" min=\"600\" reversed=\"false\" step=\"50\" max=\"1600\"/>

    </settingsPane>
	</settingsTab>
" >> $XML


echo '
  <settingsTab name="I/O">
    <settingsPane description="Set the active I/O elevator algorithm. The scheduler decides how to handle I/O requests and how to handle them. FIOPS is the everyday recommended default scheduler."  
                  name="I/O schedulers">' >> $XML

echo "
      <spinner name=\"Current internal storage scheduler\"
               action=\"iosched internal /sys/block/mmcblk0/queue/scheduler\">" >> $XML

for IOSCHED in `cat /sys/block/mmcblk0/queue/scheduler | sed -e 's/\]//;s/\[//'`; do
  echo "
        <spinnerItem name=\"$IOSCHED\" value=\"$IOSCHED\"/>" >> $XML
done

echo '
      </spinner>' >> $XML

echo "
      <spinner name=\"Current SD card scheduler\"
               action=\"iosched sd /sys/block/mmcblk1/queue/scheduler\">" >> $XML

for IOSCHED in `cat /sys/block/mmcblk0/queue/scheduler | sed -e 's/\]//;s/\[//'`; do
  echo "
        <spinnerItem name=\"$IOSCHED\" value=\"$IOSCHED\"/>" >> $XML
done

echo '
      </spinner>
    </settingsPane>

    <settingsPane name="I/O read-ahead" 
                  description="The readahead value is the requested block size the host controller reads into memory on any given I/O read request. Increasing the read-ahead on cards with high latency and lower IOPS will increase the raw thoroughput.">

      <seekBar  description="The read-ahead value on the internal phone memory." 
                name="Internal storage read-ahead" 
                action="generictag internal /sys/block/mmcblk0/queue/read_ahead_kb"
                unit="kB" min="128" reversed="false" step="128" max="2048"/>

      <seekBar  description="The read-ahead value on the external SD card." 
                name="SD card read-ahead" 
                action="generictag sd /sys/block/mmcblk1/queue/read_ahead_kb"
                unit="kB" min="128" reversed="false" step="128" max="2048"/>

    </settingsPane>

    <settingsPane name="ZRAM" 
                  description="ZRAM compresses memory pages in an in-memory swap disk. ">

      <seekBar  description="The disk size represents the amount of non-compressed data allowed to fit into the compressed ramdisk. The actual memory used by the ramdisk varies depending on compression ratio." 
                name="ZRAM disk size" 
                action="zram"
                unit="mB" min="0" reversed="false" step="8" max="2040"/>

		<button description="ZRAM state check" name="ZRAM Statisctics" action="zramstats" label="ZRAM Stats"/>
    
    </settingsPane>


    <settingsPane name="Dynamic FSync" 
                  description="fsync() serves as a flush/commit to the write buffer when doing I/O writes to storage. It stores a buffer with data and periodically writes it to the storage device. Disabling it will no longer buffer and directly write the data.">

      <checkbox description="Dynamic FSync disables file write synchronosity during screen-on, and re-enables it on screen-off." 
                name="Enable dynamic FSync" 
                action="generic01 /sys/kernel/dyn_fsync/Dyn_fsync_active"
                label="Enable dynamic FSync"/>
    </settingsPane>
  </settingsTab>' >> $XML


echo '
  <settingsTab name="UKSM">
    <settingsPane description="UKSM aka Ultra Kernel Samepage Merging lets system share identical memory pages amongst different processes. This is done by scanning through the memory finding duplicate pages.The duplicate pair is then merged into a single page, and mapped into both original locations. The page is also marked as copy-on-write, so the kernel will automatically separate them again should one proccess modify its data." name="Ultra Kernel Samepage Merging Settings">

      <button description="Ultra KSM state check" name="Ultra-KSM STATS" action="uksmstats" label="Ultra-KSM Stats"/>

      <checkbox description="If this box is checked Ultra-KSM will be enabled. Default = Enabled" 
                name="Ultra Kernel Samepage Merging"
                action="generic01 /sys/kernel/mm/uksm/run"
                label="Enable UKSM"/>

      <seekBar  description="Choose how long to sleep before you begin each work, measured in milliseconds (1000 = 1 second). Default = 100." 
                name="Sleep milliseconds" 
                action="generic /sys/kernel/mm/uksm/sleep_millisecs"
                unit="mS" min="0" reversed="false" step="100" max="10000" default="100"/>

      <spinner description="This is a macro UKSM speed mode interface. There are several alternative modes, [*]Full (95%) [*]Medium (50%) [*]Low (20%) [*]Quiet (greater than 1%) each use a certain percentage of the CPU.       Default = Full (95%)" name="UKSM CPU Modes" action="generic-long uksm_cpu_mode /sys/kernel/uksm/cpu_governor">
             <spinnerItem name="Full (95%)" value="full"/> 
             <spinnerItem name="Medium (50%)" value="medium"/> 
             <spinnerItem name="Low (20%)" value="low"/>
             <spinnerItem name="Quiet (+1%)" value="quiet"/> 
      </spinner>

      <seekBar  description="Already using a specific CPU Mode? You can further limit the cpu usgae by the exact percentage. Default = 95" 
                name="UKSM CPU Percentage" 
                action="generic /sys/kernel/mm/uksm/max_cpu_percentage"
                unit="%" min="1" reversed="false" step="1" max="99"/>
      
    </settingsPane>
  </settingsTab>' >> $XML

echo '
  <settingsTab name="VM">
    <settingsPane description="" 
                  name="Virtual Machine Settings">

      <seekBar  description="A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space." 
                name="Virtual machine swappiness" 
                action="generic /proc/sys/vm/swappiness"
                unit="%" min="0" reversed="false" step="1" max="100"/>

      <seekBar  description="File system cache (dentry/inode) is really more important than the block cache above in dirty ratio and dirty background ratio, so we really want the kernel to use up much more of the RAM for file system cache, this will increas the performance of the system without sacrificing performance at the application level. The default value is 100, as a percentage, and what you want to do is lower the value to tell the kernel to favor the file system cache and not drop them aggressively." 
                name="VFS cache pressure" 
                action="generic /proc/sys/vm/vfs_cache_pressure"
                unit="%" min="0" reversed="false" step="1" max="100"/>

      <spinner description="Writing to this will cause the kernel to drop clean caches, dentries and inodes from memory, causing that memory to become free. Default = 0 (will reset to 0 on r" name="Drop caches" action="drop_cache /proc/sys/vm/drop_caches">
             <spinnerItem name="Pagecache (1)" value="1"/> 
             <spinnerItem name="Dentries and inodes (2)" value="2"/> 
             <spinnerItem name="Pagecache, Dentries and inodes (3)" value="3"/>
      </spinner>

      <seekBar  description="This is used to force the Linux VM to keep a minimum number of kilobytes free. The VM uses this number to compute a pages_min value for each lowmem zone in the system. Each lowmem zone gets a number of reserved free pages based proportionally on its size. Default is 2048kb." 
                name="Minimum free Kilobytes" 
                action="generic /proc/sys/vm/min_free_kbytes"
                unit="kB" min="128" reversed="false" step="256" max="8192"/>

      <seekBar  description="This is the interval of when the writeback daemons periodically wake up and write old data out to disk. It is expressed in 100ths of a second."
                name="Dirty Writeback Cenetics" 
                action="generic /proc/sys/vm/dirty_writeback_centisecs"
                unit="%" min="0" reversed="false" step="100" max="500"/>

      <seekBar  description="How old dirty data should be before the kernel considers it old enough to be written to disk. It is expressed in 100ths of a second."
                name="Dirty Expire Cenetics" 
                action="generic /proc/sys/vm/dirty_expire_centisecs"
                unit="%" min="0" reversed="false" step="100" max="500"/>

      <seekBar  description="This controls how often the kernel writes data to disk"
                name="Dirty Background Ratio" 
                action="generic /proc/sys/vm/dirty_background_ratio"
                unit="%" min="0" reversed="false" step="100" max="500"/>
    </settingsPane>
  </settingsTab>' >> $XML


echo '
  <settingsTab name="MISC">
<settingsPane description="" 
                  name="Audio">
    
     <button  description="Control the Audio of your device through Boeffla Sound App. Big thanks to Andip@XDA. If the app is not installed this button will direct you the playstore so you can download it first." 
                name="Boeffla Sound" 
                action="boeffla_sound"
                label="Open Boeffla Sound"/>

    </settingsPane>

    <settingsPane description="" 
                  name="Touch Boost">
    
     <checkbox  description="Enable touch boost at FIXED freq mhz step or disable it for variable steps." 
                name="Touch Boost Switch" 
                action="generic01 /sys/class/misc/touchboost_switch/touchboost_switch"
                label="Enable touch boost"/>

     <seekBar  description="The frequency step at which Touch Boost will be used. Default 800000 hz" 
		name="Touch Boost Frequency" 
                action="generic /sys/class/misc/touchboost_switch/touchboost_freq" 
                unit=" hz" min="200000" reversed="false" step="100000" max="1400000"/>

    </settingsPane>
    <settingsPane description="" 
                  name="Touch-to-Wake">

     <checkbox  description="Touch to Wake" name="Touch-to-Wake"
                name="Touch-to-Wake" 
                action="generic01 /sys/class/misc/touchwake/enabled"
                label="Enable Touch-to-Wake"/>

      <seekBar  description="Touch-to-Wake Delay in millisecond (Default is 5000ms). Setting Delay to 0 makes Touch-to-Wake permanently active !" 
		name="Touch-to-Wake Delay" 
                action="generic /sys/class/misc/touchwake/delay" 
                unit=" ms" min="0" reversed="false" step="1000" max="60000"/>

    </settingsPane>

<settingsPane name="Fast Charge"
              description="Speed up charge time. [Warning]: Use at your own risk, changing charging voltages may cause damage to your device or the device you are using to charge from.">

      <checkbox description="Enable or Disable fast charging. Default = Enabled" 
                name="Enable Fast Charging" 
                action="generic01 /sys/kernel/fast_charge/force_fast_charge"
                label="Enable fast charging"/>

      <spinner description="AC,CDP,Dock charge currents. Default = 1000" name="AC Charge" action="generic-long ac_charge /sys/kernel/fast_charge/ac_charge_level">
             <spinnerItem name="1000 mA" value="1000"/> 
             <spinnerItem name="1100 mA" value="1100"/> 
             <spinnerItem name="1200 mA" value="1200"/>
             <spinnerItem name="1300 mA" value="1300"/>
             <spinnerItem name="1400 mA" value="1400"/>
             <spinnerItem name="1500 mA" value="1500"/> 
      </spinner>

      <spinner description="USB charge current. Default = 475" name="USB Charge" action="generic-long usb_charge /sys/kernel/fast_charge/usb_charge_level">
             <spinnerItem name="475 mA" value="475"/> 
             <spinnerItem name="600 mA" value="600"/> 
             <spinnerItem name="700 mA" value="700"/>
             <spinnerItem name="800 mA" value="800"/>
             <spinnerItem name="900 mA" value="900"/>
             <spinnerItem name="1000 mA" value="1000"/> 
      </spinner>
  </settingsPane>

	<settingsPane description="A reboot is needed for the changes to take effect!" name="AD Blocker">

		<button description="" name="" action="ad_blocking install" label="Install AD-Blocking"/>

		<button description="" name="" action="ad_blocking reset" label="Un-install AD-Blocking"/>

	</settingsPane>
  </settingsTab>

</settingsRoot>' >> $XML

chmod 777 $XML
